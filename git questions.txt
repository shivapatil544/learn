Difference between git diff and git status

git diff is specially aimed at comparisons, and it's very powerful at that:
It can compare commits, branches, a single file across revisions or branches, etc. 
On the other hand, git status is specifically for the status of the working tree.
==============================================================================================

Difference between git merge and git rebase

rebase reapplies commits on top of another base branch, basically overrides the commits history, 
whereas merge joins two or more development histories together and retains history completely same as it happened
==============================================================================================


how to fix broken commit in git

git commit --amend
==============================================================================================

what happens if i delete .git folder ?

Deleting the . git folder does not delete the other files in that folder which is part of the git repository. 
However, the folder will no longer be under versioning control.
==============================================================================================

what is the use of staging area in git?

staging helps you split up one large change into multiple commits
staging helps in reviewing changes
staging helps when a merge has conflicts
staging helps you sneak in small changes
==============================================================================================

What is version control system (VCS) ?

Version control is a system that records changes to a file or set of files over time so that you can recall specific versions later.


what is git ls-tree ?
git ls-tree is similar to ls in unix command ls it lists the working directory tree


what is git annotate ?
it is similar to git blame which means it helps in know who made a particular change (who touched the code

difference between git revert and git 

git add -p
Interactively choose hunks of patch between the index and the work tree and add them to the index. This gives the user a chance to review the difference before adding modified contents to the index.

           This effectively runs add --interactive, but bypasses the initial command menu and directly jumps to the patch subcommand


git revert

This command creates a new commit that undoes the changes from a previous commit. This command adds new history to the project (it doesn't modify existing history).

git checkout

This command checks-out content from the repository and puts it in your work tree. It can also have other effects, depending on how the command was invoked. For instance, it can also change which branch you are currently working on. This command doesn't make any changes to the history.

git reset

This command is a little more complicated. It actually does a couple of different things depending on how it is invoked. It modifies the index (the so-called "staging area"). Or it changes which commit a branch head is currently pointing at. This command may alter existing history (by changing the commit that a branch references).


